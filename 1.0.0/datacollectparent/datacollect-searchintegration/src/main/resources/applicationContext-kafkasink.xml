<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
	<bean id="propertyConfigurerKafkaConsumer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">   
        <property name="order" value="2" />   
        <property name="ignoreUnresolvablePlaceholders" value="true" />   
        <property name="location">   
           <value>classpath:/kafkaconsumer.properties</value>   
        </property>   
    </bean>
    
    <bean id="propertyConfigurerElasticSearchsink" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">   
        <property name="order" value="3" />   
        <property name="ignoreUnresolvablePlaceholders" value="true" />   
        <property name="location">   
           <value>classpath:/elasticsearchsink.properties</value>   
        </property>   
    </bean>   	
    
	
	<util:list id="topicNames">
		<value>omsWorfklowEvent</value>
	</util:list>
	
	<bean id="kafkaConsumerFactory" class="org.wispersd.core.integration.kafka.consumer.KafkaConsumerFactory" init-method="init" destroy-method="destroy">
		<property name="topicNames" ref="topicNames"/>
		<property name="consumerProperties">
			<props>
				<prop key="bootstrap.servers">${kafka.bootstrap.servers}</prop>
				<prop key="group.id">${kafkaconsumer.groupid}</prop>
				<prop key="auto.offset.reset">${kafkaconsumer.initialoffset}</prop>
				<prop key="enable.auto.commit">${kafkaconsumer.autocommit}</prop>
				<prop key="session.timeout.ms">${kafkaconsumer.sessiontimeout}</prop>
				<prop key="heartbeat.interval.ms">${kafkaconsumer.heartbeat}</prop>
				<prop key="max.partition.fetch.bytes">${kafkaconsumer.maxfetchsize}</prop>
				<prop key="key.deserializer">${kafkaconsumer.keydeserializer}</prop>
				<prop key="value.deserializer">${kafkaconsumer.valuedeserializer}</prop>
			</props>
		</property>
	</bean>	

	<bean id="consumerDataReverseConverter" class="org.wispersd.core.datacollect.searchintegration.ConsumerDataReverseConverter"/>
	
	<bean id="defaultErrorHandlingStrategy" class="org.wispersd.core.integration.impl.DefaultErrorHandlingStrategy"/>
	
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"></bean>
	
	<bean id="elasticSearchMappingStrategy" class="org.wispersd.core.datacollect.searchintegration.DefaultElasticSearchMappingStrategy">
		<property name="topicToIndexMapping">
			<map>
				<entry key="omsWorfklowEvent" value="omsworkflow"></entry>
			</map>
		</property>
	</bean>
	
	<bean id="kafkaToElasticSearchSink" class="org.wispersd.core.datacollect.searchintegration.KafkaToElasticSearchSink" init-method="init" destroy-method="destroy">
		<property name="batchSubmitSize" value="${elasticsearch.clientBatchSubmitSize}"></property>
		<property name="submitMaxWait" value="${elasticsearch.clientSubmitMaxWait}"></property>
		<property name="elasticSearchClient" ref="elasticSearchClient"></property>
		<property name="elasticSearchMappingStrategy" ref="elasticSearchMappingStrategy"></property>
		<property name="objectMapper">
			<bean class="com.fasterxml.jackson.databind.ObjectMapper"></bean>
		</property>
	</bean>
	
	
	<bean id="kafkaDataPollerFactory" class="org.wispersd.core.integration.kafka.consumer.KafkaDataPollerFactory" init-method="init" destroy-method="destroy">
		<property name="topicNames" ref="topicNames"/>
		<property name="kafkaConsumerFactory" ref="kafkaConsumerFactory"/>
		<property name="executorService">
			<bean class="java.util.concurrent.ThreadPoolExecutor">
				<constructor-arg index="0" type="int" value="5"></constructor-arg>
				<constructor-arg index="1" type="int" value="5"></constructor-arg>
				<constructor-arg index="2" type="long" value="1500"></constructor-arg>
				<constructor-arg index="3" type="java.util.concurrent.TimeUnit" value="MILLISECONDS"></constructor-arg>
				<constructor-arg index="4" type="java.util.concurrent.BlockingQueue">
					<bean class="java.util.concurrent.ArrayBlockingQueue">
						<constructor-arg index="0" value="5"></constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="topicDataConverters">
			<map>
				<entry key="omsWorfklowEvent"><ref bean="consumerDataReverseConverter"/></entry>
			</map>
		</property>
		<property name="topicProcessDelegates">
			<map>
				<entry key="omsWorfklowEvent"><ref bean="kafkaToElasticSearchSink"/></entry>
			</map>
		</property>
		<property name="topicErrorHandlingStrategies">
			<map>
				<entry key="omsWorfklowEvent"><ref bean="defaultErrorHandlingStrategy"/></entry>
			</map>
		</property>
	</bean>
</beans>	